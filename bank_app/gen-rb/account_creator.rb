#
# Autogenerated by Thrift Compiler (0.12.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'bank_types'

module AccountCreator
  class Client
    include ::Thrift::Client

    def create_account(pesel, balance)
      send_create_account(pesel, balance)
      return recv_create_account()
    end

    def send_create_account(pesel, balance)
      send_message('create_account', Create_account_args, :pesel => pesel, :balance => balance)
    end

    def recv_create_account()
      result = receive_message(Create_account_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'create_account failed: unknown result')
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_create_account(seqid, iprot, oprot)
      args = read_args(iprot, Create_account_args)
      result = Create_account_result.new()
      result.success = @handler.create_account(args.pesel, args.balance)
      write_result(result, oprot, 'create_account', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class Create_account_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    PESEL = 1
    BALANCE = 2

    FIELDS = {
      PESEL => {:type => ::Thrift::Types::STRING, :name => 'pesel'},
      BALANCE => {:type => ::Thrift::Types::I64, :name => 'balance'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Create_account_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => ::BankClient}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

